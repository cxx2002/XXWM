<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cxx.reggie.mapper.EmployeeMapper">

    <resultMap id="BaseResultMap" type="com.cxx.reggie.pojo.Employee">
        <!--@Table employee-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="VARCHAR"/>
        <result property="idNumber" column="id_number" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="createUser" column="create_user" jdbcType="INTEGER"/>
        <result property="updateUser" column="update_user" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          id, name, username, password, phone, sex, id_number, status, create_time, update_time, create_user, update_user
        from employee
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          id, name, username, password, phone, sex, id_number, status, create_time, update_time, create_user, update_user
        from employee
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
            <if test="idNumber != null and idNumber != ''">
                and id_number = #{idNumber}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="createUser != null">
                and create_user = #{createUser}
            </if>
            <if test="updateUser != null">
                and update_user = #{updateUser}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          id, name, username, password, phone, sex, id_number, status, create_time, update_time, create_user, update_user
        from reggie.employee
    </select>
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from employee
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
            <if test="idNumber != null and idNumber != ''">
                and id_number = #{idNumber}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="createUser != null">
                and create_user = #{createUser}
            </if>
            <if test="updateUser != null">
                and update_user = #{updateUser}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert2" keyProperty="id" useGeneratedKeys="true">
        insert into employee(name, username, password, phone, sex, id_number, status, create_time, update_time, create_user, update_user)
        values (#{name}, #{username}, #{password}, #{phone}, #{sex}, #{idNumber}, #{status}, #{createTime}, #{updateTime}, #{createUser}, #{updateUser})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into employee(name, username, password, phone, sex, id_number, status, create_time, update_time, create_user, update_user)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.name}, #{entity.username}, #{entity.password}, #{entity.phone}, #{entity.sex}, #{entity.idNumber}, #{entity.status}, #{entity.createTime}, #{entity.updateTime}, #{entity.createUser}, #{entity.updateUser})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into employee(name, username, password, phone, sex, id_number, status, create_time, update_time, create_user, update_user)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.username}, #{entity.password}, #{entity.phone}, #{entity.sex}, #{entity.idNumber}, #{entity.status}, #{entity.createTime}, #{entity.updateTime}, #{entity.createUser}, #{entity.updateUser})
        </foreach>
        on duplicate key update
        name = values(name),
        username = values(username),
        password = values(password),
        phone = values(phone),
        sex = values(sex),
        id_number = values(id_number),
        status = values(status),
        create_time = values(create_time),
        update_time = values(update_time),
        create_user = values(create_user),
        update_user = values(update_user)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update employee
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex},
            </if>
            <if test="idNumber != null and idNumber != ''">
                id_number = #{idNumber},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="createUser != null">
                create_user = #{createUser},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from employee where id = #{id}
    </delete>
    <insert id="insertSelective">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="name != null">name,</if>
            <if test="username != null">username,</if>
            <if test="password != null">password,</if>
            <if test="phone != null">phone,</if>
            <if test="sex != null">sex,</if>
            <if test="idNumber != null">id_number,</if>
            <if test="status != null">status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createUser != null">create_user,</if>
            <if test="updateUser != null">update_user,</if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=INTEGER},</if>
            <if test="name != null">#{name,jdbcType=VARCHAR},</if>
            <if test="username != null">#{username,jdbcType=VARCHAR},</if>
            <if test="password != null">#{password,jdbcType=VARCHAR},</if>
            <if test="phone != null">#{phone,jdbcType=VARCHAR},</if>
            <if test="sex != null">#{sex,jdbcType=VARCHAR},</if>
            <if test="idNumber != null">#{idNumber,jdbcType=VARCHAR},</if>
            <if test="status != null">#{status,jdbcType=INTEGER},</if>
            <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
            <if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if>
            <if test="createUser != null">#{createUser,jdbcType=INTEGER},</if>
            <if test="updateUser != null">#{updateUser,jdbcType=INTEGER},</if>
        </trim>
    </insert>

</mapper>

